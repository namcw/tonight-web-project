/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2017-10-27 01:04:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.room;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import accom.model.vo.RoomReview;
import member.model.vo.Member;
import java.sql.Date;
import java.util.*;

public final class roomReviewDetailView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("accom.model.vo.RoomReview");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	Member member = (Member)session.getAttribute("member");

      out.write(' ');
      out.write('\n');

RoomReview RoomReview = (RoomReview)request.getAttribute("review");
	int currentPage = ((Integer)request.getAttribute("currentPage")).intValue();

      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>roomReviewDetailView</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<hr style=\"clear:both;\">\n");
      out.write("<h2 align=\"center\">");
      out.print( RoomReview.getReviewNum() );
      out.write("번 게시글 상세보기</h2>\n");
      out.write("<br>\n");
      out.write("<table align=\"center\" cellspacing=\"0\" cellpadding=\"10\" border=\"1\" width=\"500\">\n");
      out.write("<tr><th>제목</th><td>");
      out.print( RoomReview.getReviewTitle() );
      out.write("</td></tr>\n");
      out.write("<tr><th>작성자</th><td>");
      out.print( RoomReview.getReviewriter() );
      out.write("</td></tr>\n");
      out.write("<tr><th>첨부파일</th>\n");
      out.write("\t<td>\n");
      out.write("\t");
 if(RoomReview.getReviewOriginalFileName() == null){ 
      out.write("\n");
      out.write("\t\t첨부파일 없음\n");
      out.write("\t");
 }else{ 
      out.write("\n");
      out.write("\t<a href=\"/tonight/rfdown?ofile=");
      out.print( RoomReview.getReviewOriginalFileName() );
      out.write("&rfile=");
      out.print( RoomReview.getReviewRenameFileName() );
      out.write("\">\n");
      out.write("\t\t");
      out.print( RoomReview.getReviewOriginalFileName() );
      out.write("\n");
      out.write("\t</a>\n");
      out.write("\t");
 } 
      out.write("\n");
      out.write("\t</td>\n");
      out.write("</tr>\n");
      out.write("<tr><th>내용</th><td>");
      out.print( RoomReview.getReviewContent() );
      out.write("</td></tr>\n");
      out.write("<tr><td colspan=\"2\" align=\"center\">\n");
  if(member != null){ 
      out.write("\n");
      out.write("\t<a href=\"/tonight/views/room/roomReviewReplyView.jsp?rnum=");
      out.print( RoomReview.getReviewNum() );
      out.write("&page=");
      out.print( currentPage );
      out.write("\">[댓글달기]</a>\n");
 if(member.getMemberId().equals(RoomReview.getReviewriter())){ 
      out.write("\n");
      out.write("\t\n");
      out.write("\t<a href=\"/tonight/rrupdate?rnum=");
      out.print( RoomReview.getReviewNum() );
      out.write("&page=");
      out.print( currentPage );
      out.write("\">[수정페이지로 이동]</a>\n");
      out.write("\t&nbsp;\n");
      out.write("\t<a href=\"/tonight/rrdelete?rnum=");
      out.print( RoomReview.getReviewNum() );
      out.write("\">[삭제]</a>\n");
  }} 
      out.write("\n");
      out.write("&nbsp; \n");
      out.write("<a href=\"/tonight/rreview?page=");
      out.print( currentPage );
      out.write("\">[목록]</a>\n");
      out.write("</td></tr>\n");
      out.write("</table>\n");
      out.write("<br>\n");
      out.write("<hr>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
